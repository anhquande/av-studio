{
  "name": "Av-studio",
  "tagline": "A command-line utility to create slideshow, picture-in-picture, extract audio from video, watermark and more using ffmpeg and imagemagick",
  "body": "# av-studio\r\nav-studio is a command-line utility to manipulate audios, videos and images using **ffmpeg** and **imagemagick**\r\n\r\n-----------------------\r\n## Features\r\n### Videos and Audios\r\n* Create slideshow from a series of images, optional with watermark\r\n* Create PIP (picture-in-picture) video in which a video is overlayed on top of the other\r\n* Extract MP3 audio from a video\r\n* Mix an audio with a video\r\n* Add an image watermark into a video.\r\n* Add text into a video\r\n* Mute videos \r\n* Resize videos\r\n* Trim videos\r\n* Join or merge multiples videos into one\r\n* Mix randomly multiple short clips to create a video mashup\r\n* Hard burn a subtitle to a video\r\n\r\n### Images\r\n* Resize/Crop a image\r\n* Add Frame to an image. A frame is basically a transparent background image overlayed on top of the other image\r\n\r\n-----------------------\r\n## Quick start\r\n* Launch your terminal and go to your workspace directory\r\n* Clone the project repo by running the command git clone\r\n\r\n        git clone https://github.com/anhquande/av-studio.git\r\n\r\n* Install project dependencies\r\n\r\n        npm install\r\n\r\n* Make sure that **ffmpeg** and **imagemagick** are both installed and included in the global PATH environment, so that you can execute them at anywhere\r\n* For convenience it is better to add the project directory in the global PATH environment\r\n\r\n-----------------------\r\n## How to use\r\n**Assumed that you already added the av-studio directory in the global PATH environment** \r\n1. Get general help \r\n        av -h\r\n\r\n2. Get help of a certain command\r\n        \r\n        av <command> -h\r\n\r\n    Example:\r\n    * get help about how to resize an image\r\n        \r\n            av image-resize -h\r\n\r\n    * or just type any parameters after **av** then you will get some __hints__ from the error messages\r\n\r\n\r\n## Examples\r\n1. Create a **slideshow** from *15* images in the folder *C:\\My Documents\\My Pictures*, each image appears in 10 seconds\r\n\r\n        av slideshow \"C:\\My Documents\\My Pictures\" -c 15 -d 10\r\n\r\n2. Add logo to video\r\n\r\n        av logo mylogo.png myvideo.mp4 -o myvideo_with_logo.mp4\r\n\r\n3. Create a Picture-in-Picture video\r\n        \r\n        av pip background.mp4 myvideo.mp4 -o product.mp4\r\n\r\n4. Burn subtitle\r\n   \r\n        av subtitle myvideo.mp4 mysutitle.srt \r\n\r\n5. Trim 5 seconds from beginning of a video\r\n\r\n        av trim myvideo.mp4 -b 0 -e 00:00:05 -o mytrimvideo.mp4\r\n\r\n6. Trim a video from 00:01:00 until the end\r\n\r\n        av trim myvideo.mp4 -b 00:01:00 -o mytrimvideo.mp4\r\n\r\n7. Resize image\r\n\r\n        av imageresize myphoto.jpg -s \"1024x768\"\r\n\r\n8. Join 3 videos into one\r\n\r\n        av join open.mp4 main.mp4 end.mp4 -o final.mp4",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}